{"version":3,"sources":["../src/index.ts","../src/hooks/useLocalStorage.ts","../src/hooks/useSessionStorage.ts","../src/hooks/usePrevious.ts","../src/hooks/useToggle.ts","../src/hooks/useApi.ts","../src/hooks/useDebounce.ts","../src/hooks/useThrottle.ts","../src/hooks/useChatStream.ts","../src/hooks/useClickOutside.ts","../src/hooks/useKeyPress.ts","../src/hooks/useMediaQuery.ts","../src/hooks/useWindowSize.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/hooks/useMountedState.ts","../src/hooks/useUpdateEffect.ts"],"sourcesContent":["/**\n * @de/hooks - React hooks collection for DE frontends\n * \n * A comprehensive collection of custom React hooks for common patterns\n * and utilities used across DE frontend applications.\n */\n\n// State management hooks\nexport { useLocalStorage } from './hooks/useLocalStorage';\nexport { useSessionStorage } from './hooks/useSessionStorage';\nexport { usePrevious } from './hooks/usePrevious';\nexport { useToggle } from './hooks/useToggle';\n\n// API and data fetching hooks\nexport { useApi } from './hooks/useApi';\nexport { useDebounce } from './hooks/useDebounce';\nexport { useThrottle } from './hooks/useThrottle';\nexport { useChatStream } from './hooks/useChatStream';\nexport type { UseChatStreamOptions, UseChatStreamReturn } from './hooks/useChatStream';\n\n// UI and interaction hooks\nexport { useClickOutside } from './hooks/useClickOutside';\nexport { useKeyPress } from './hooks/useKeyPress';\nexport { useMediaQuery } from './hooks/useMediaQuery';\nexport { useWindowSize } from './hooks/useWindowSize';\n\n// Utility hooks\nexport { useIsomorphicLayoutEffect } from './hooks/useIsomorphicLayoutEffect';\nexport { useMountedState } from './hooks/useMountedState';\nexport { useUpdateEffect } from './hooks/useUpdateEffect';\n\n// Types\nexport type * from './types';","import { useState, useCallback } from 'react';\n\nimport type { IUseStorageOptions } from '../types';\n\n/**\n * Custom hook for managing localStorage with React state\n * \n * @param key - The localStorage key\n * @param initialValue - Initial value if key doesn't exist\n * @param options - Serialization options\n * @returns [value, setValue, removeValue]\n */\nexport function useLocalStorage<T>(\n  key: string,\n  initialValue: T,\n  options: IUseStorageOptions = {}\n): [T, (value: T | ((val: T) => T)) => void, () => void] {\n  const {\n    serialize = JSON.stringify,\n    deserialize = JSON.parse,\n  } = options;\n\n  // Get initial value from localStorage or use provided initial value\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    if (typeof window === 'undefined') {\n      return initialValue;\n    }\n\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? deserialize(item) : initialValue;\n    } catch (error) {\n      console.warn(`Error reading localStorage key \"${key}\":`, error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that persists to localStorage\n  const setValue = useCallback(\n    (value: T | ((val: T) => T)) => {\n      try {\n        // Allow value to be a function so we have the same API as useState\n        const valueToStore = value instanceof Function ? value(storedValue) : value;\n        \n        // Save state\n        setStoredValue(valueToStore);\n        \n        // Save to localStorage\n        if (typeof window !== 'undefined') {\n          window.localStorage.setItem(key, serialize(valueToStore));\n        }\n      } catch (error) {\n        console.error(`Error setting localStorage key \"${key}\":`, error);\n      }\n    },\n    [key, serialize, storedValue]\n  );\n\n  // Remove value from localStorage\n  const removeValue = useCallback(() => {\n    try {\n      setStoredValue(initialValue);\n      if (typeof window !== 'undefined') {\n        window.localStorage.removeItem(key);\n      }\n    } catch (error) {\n      console.error(`Error removing localStorage key \"${key}\":`, error);\n    }\n  }, [key, initialValue]);\n\n  return [storedValue, setValue, removeValue];\n}","import { useState, useCallback } from 'react';\n\nimport type { IUseStorageOptions } from '../types';\n\n/**\n * Custom hook for managing sessionStorage with React state\n * \n * @param key - The sessionStorage key\n * @param initialValue - Initial value if key doesn't exist\n * @param options - Serialization options\n * @returns [value, setValue, removeValue]\n */\nexport function useSessionStorage<T>(\n  key: string,\n  initialValue: T,\n  options: IUseStorageOptions = {}\n): [T, (value: T | ((val: T) => T)) => void, () => void] {\n  const {\n    serialize = JSON.stringify,\n    deserialize = JSON.parse,\n  } = options;\n\n  // Get initial value from sessionStorage or use provided initial value\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    if (typeof window === 'undefined') {\n      return initialValue;\n    }\n\n    try {\n      const item = window.sessionStorage.getItem(key);\n      return item ? deserialize(item) : initialValue;\n    } catch (error) {\n      console.warn(`Error reading sessionStorage key \"${key}\":`, error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that persists to sessionStorage\n  const setValue = useCallback(\n    (value: T | ((val: T) => T)) => {\n      try {\n        // Allow value to be a function so we have the same API as useState\n        const valueToStore = value instanceof Function ? value(storedValue) : value;\n        \n        // Save state\n        setStoredValue(valueToStore);\n        \n        // Save to sessionStorage\n        if (typeof window !== 'undefined') {\n          window.sessionStorage.setItem(key, serialize(valueToStore));\n        }\n      } catch (error) {\n        console.error(`Error setting sessionStorage key \"${key}\":`, error);\n      }\n    },\n    [key, serialize, storedValue]\n  );\n\n  // Remove value from sessionStorage\n  const removeValue = useCallback(() => {\n    try {\n      setStoredValue(initialValue);\n      if (typeof window !== 'undefined') {\n        window.sessionStorage.removeItem(key);\n      }\n    } catch (error) {\n      console.error(`Error removing sessionStorage key \"${key}\":`, error);\n    }\n  }, [key, initialValue]);\n\n  return [storedValue, setValue, removeValue];\n}","import { useRef, useEffect } from 'react';\n\n/**\n * Custom hook that returns the previous value of a variable\n * \n * @param value - The current value\n * @returns The previous value\n */\nexport function usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T>();\n  \n  useEffect(() => {\n    ref.current = value;\n  });\n  \n  return ref.current;\n}","import { useCallback, useState } from 'react';\n\n/**\n * Custom hook for managing boolean toggle state\n * \n * @param initialValue - Initial boolean value (default: false)\n * @returns [value, toggle, setTrue, setFalse]\n */\nexport function useToggle(initialValue = false): [\n  boolean,\n  () => void,\n  () => void,\n  () => void\n] {\n  const [value, setValue] = useState<boolean>(initialValue);\n\n  const toggle = useCallback(() => setValue(prev => !prev), []);\n  const setTrue = useCallback(() => setValue(true), []);\n  const setFalse = useCallback(() => setValue(false), []);\n\n  return [value, toggle, setTrue, setFalse];\n}","import { useState, useCallback, useRef } from 'react';\n\nimport type { IUseApiOptions, IUseApiState } from '../types';\n\n/**\n * Custom hook for API calls with loading, error, and retry logic\n * \n * @param apiFunction - The async function to call\n * @param options - Configuration options\n * @returns API state and execute function\n */\nexport function useApi<T = unknown, P extends unknown[] = unknown[]>(\n  apiFunction: (...args: P) => Promise<T>,\n  options: IUseApiOptions<T> = {}\n): IUseApiState<T> & { execute: (...args: P) => Promise<void>; reset: () => void } {\n  const {\n    initialData = null,\n    onSuccess,\n    onError,\n    retry = 0,\n    retryDelay = 1000,\n  } = options;\n\n  const [state, setState] = useState<IUseApiState<T>>({\n    data: initialData,\n    loading: false,\n    error: null,\n  });\n\n  const retryCount = useRef(0);\n  const abortController = useRef<AbortController | null>(null);\n\n  const execute = useCallback(\n    async (...args: P) => {\n      // Cancel previous request if still pending\n      if (abortController.current) {\n        abortController.current.abort();\n      }\n\n      abortController.current = new AbortController();\n      retryCount.current = 0;\n\n      const attemptCall = async (): Promise<void> => {\n        setState(prev => ({ ...prev, loading: true, error: null }));\n\n        try {\n          const data = await apiFunction(...args);\n          \n          if (!abortController.current?.signal.aborted) {\n            setState({ data, loading: false, error: null });\n            onSuccess?.(data);\n          }\n        } catch (error) {\n          if (!abortController.current?.signal.aborted) {\n            const apiError = error instanceof Error ? error : new Error('An error occurred');\n            \n            if (retryCount.current < retry) {\n              retryCount.current++;\n              setTimeout(() => {\n                if (!abortController.current?.signal.aborted) {\n                  attemptCall();\n                }\n              }, retryDelay);\n            } else {\n              setState(prev => ({ ...prev, loading: false, error: apiError }));\n              onError?.(apiError);\n            }\n          }\n        }\n      };\n\n      await attemptCall();\n    },\n    [apiFunction, onSuccess, onError, retry, retryDelay]\n  );\n\n  const reset = useCallback(() => {\n    if (abortController.current) {\n      abortController.current.abort();\n    }\n    setState({\n      data: initialData,\n      loading: false,\n      error: null,\n    });\n    retryCount.current = 0;\n  }, [initialData]);\n\n  return {\n    ...state,\n    execute,\n    reset,\n  };\n}","import { useState, useEffect } from 'react';\n\n/**\n * Custom hook that debounces a value\n * \n * @param value - The value to debounce\n * @param delay - The delay in milliseconds\n * @returns The debounced value\n */\nexport function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}","import { useRef, useCallback } from 'react';\n\n/**\n * Custom hook that throttles a function call\n * \n * @param callback - The function to throttle\n * @param delay - The throttle delay in milliseconds\n * @returns The throttled function\n */\nexport function useThrottle<T extends (...args: unknown[]) => unknown>(\n  callback: T,\n  delay: number\n): T {\n  const lastCall = useRef<number>(0);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  const throttledCallback = useCallback(\n    (...args: Parameters<T>) => {\n      const now = Date.now();\n      \n      if (now - lastCall.current >= delay) {\n        lastCall.current = now;\n        callback(...args);\n      } else {\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current);\n        }\n        \n        timeoutRef.current = setTimeout(() => {\n          lastCall.current = Date.now();\n          callback(...args);\n        }, delay - (now - lastCall.current));\n      }\n    },\n    [callback, delay]\n  ) as T;\n\n  return throttledCallback;\n}","'use client';\n\nimport { useState, useCallback } from 'react';\n\ninterface IMessage {\n  id: string;\n  role: 'user' | 'assistant';\n  content: string;\n  timestamp: Date;\n}\n\nexport interface UseChatStreamOptions {\n  apiEndpoint?: string;\n  onError?: (error: string) => void;\n  onStreamStart?: () => void;\n  onStreamEnd?: () => void;\n}\n\nexport interface UseChatStreamReturn {\n  messages: IMessage[];\n  isStreaming: boolean;\n  error: string | null;\n  sendMessage: (content: string) => Promise<void>;\n  clearMessages: () => void;\n}\n\nexport function useChatStream(options: UseChatStreamOptions = {}): UseChatStreamReturn {\n  const { \n    apiEndpoint = '/api/chat',\n    onError,\n    onStreamStart,\n    onStreamEnd \n  } = options;\n\n  const [messages, setMessages] = useState<IMessage[]>([]);\n  const [isStreaming, setIsStreaming] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const sendMessage = useCallback(\n    async (content: string) => {\n      // Add user message\n      const userMessage: IMessage = {\n        id: crypto.randomUUID(),\n        role: 'user',\n        content,\n        timestamp: new Date(),\n      };\n\n      setMessages((prev) => [...prev, userMessage]);\n      setIsStreaming(true);\n      setError(null);\n      onStreamStart?.();\n\n      // Create assistant message placeholder\n      const assistantMessage: IMessage = {\n        id: crypto.randomUUID(),\n        role: 'assistant',\n        content: '',\n        timestamp: new Date(),\n      };\n\n      setMessages((prev) => [...prev, assistantMessage]);\n\n      try {\n        const response = await fetch(apiEndpoint, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            messages: [...messages, userMessage],\n          }),\n        });\n\n        if (!response.ok) throw new Error('Failed to send message');\n\n        const reader = response.body?.getReader();\n        if (!reader) throw new Error('No reader available');\n\n        const decoder = new TextDecoder();\n        let done = false;\n\n        while (!done) {\n          const result = await reader.read();\n          done = result.done;\n          if (done) break;\n\n          const value = result.value;\n          const chunk = decoder.decode(value);\n          const lines = chunk.split('\\n').filter((line) => line.trim());\n\n          for (const line of lines) {\n            if (line.startsWith('data: ')) {\n              const data = JSON.parse(line.slice(6));\n\n              if (data.type === 'token') {\n                setMessages((prev) => {\n                  const updated = [...prev];\n                  const lastMessage = updated[updated.length - 1];\n                  if (lastMessage && lastMessage.role === 'assistant') {\n                    lastMessage.content += data.content;\n                  }\n                  return updated;\n                });\n              } else if (data.type === 'error') {\n                const errorMsg = data.error;\n                setError(errorMsg);\n                onError?.(errorMsg);\n              }\n            }\n          }\n        }\n      } catch (err) {\n        const errorMsg = err instanceof Error ? err.message : 'Unknown error';\n        setError(errorMsg);\n        onError?.(errorMsg);\n      } finally {\n        setIsStreaming(false);\n        onStreamEnd?.();\n      }\n    },\n    [messages, apiEndpoint, onError, onStreamStart, onStreamEnd]\n  );\n\n  const clearMessages = useCallback(() => {\n    setMessages([]);\n    setError(null);\n  }, []);\n\n  return {\n    messages,\n    isStreaming,\n    error,\n    sendMessage,\n    clearMessages,\n  };\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Custom hook that handles click outside of a referenced element\n * \n * @param handler - Function to call when clicking outside\n * @param events - Array of events to listen for (default: ['mousedown', 'touchstart'])\n * @returns Ref to attach to the element\n */\nexport function useClickOutside<T extends HTMLElement = HTMLElement>(\n  handler: (event: Event) => void,\n  events: string[] = ['mousedown', 'touchstart']\n): React.RefObject<T> {\n  const ref = useRef<T>(null);\n\n  useEffect(() => {\n    const listener = (event: Event) => {\n      const element = ref.current;\n      \n      if (!element || element.contains(event.target as Node)) {\n        return;\n      }\n      \n      handler(event);\n    };\n\n    events.forEach(event => {\n      document.addEventListener(event, listener);\n    });\n\n    return () => {\n      events.forEach(event => {\n        document.removeEventListener(event, listener);\n      });\n    };\n  }, [handler, events]);\n\n  return ref;\n}","import { useState, useEffect } from 'react';\n\n/**\n * Custom hook that detects if a key is being pressed\n * \n * @param targetKey - The key to detect\n * @returns Boolean indicating if the key is pressed\n */\nexport function useKeyPress(targetKey: string): boolean {\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  useEffect(() => {\n    const downHandler = (event: KeyboardEvent) => {\n      if (event.key === targetKey) {\n        setKeyPressed(true);\n      }\n    };\n\n    const upHandler = (event: KeyboardEvent) => {\n      if (event.key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [targetKey]);\n\n  return keyPressed;\n}","import { useState, useEffect } from 'react';\n\nimport type { IUseMediaQueryOptions } from '../types';\n\n/**\n * Custom hook that tracks a CSS media query\n * \n * @param query - The media query string\n * @param options - Configuration options\n * @returns Boolean indicating if the media query matches\n */\nexport function useMediaQuery(\n  query: string,\n  options: IUseMediaQueryOptions = {}\n): boolean {\n  const {\n    defaultMatches = false,\n    matchMedia = typeof window !== 'undefined' ? window.matchMedia : undefined,\n  } = options;\n\n  const [matches, setMatches] = useState(() => {\n    if (matchMedia) {\n      return matchMedia(query).matches;\n    }\n    return defaultMatches;\n  });\n\n  useEffect(() => {\n    if (!matchMedia) {\n      return;\n    }\n\n    const mediaQueryList = matchMedia(query);\n    const listener = (event: MediaQueryListEvent) => {\n      setMatches(event.matches);\n    };\n\n    // Set initial value\n    setMatches(mediaQueryList.matches);\n\n    // Listen for changes\n    if (mediaQueryList.addEventListener) {\n      mediaQueryList.addEventListener('change', listener);\n    } else {\n      // Fallback for older browsers\n      mediaQueryList.addListener(listener);\n    }\n\n    return () => {\n      if (mediaQueryList.removeEventListener) {\n        mediaQueryList.removeEventListener('change', listener);\n      } else {\n        // Fallback for older browsers\n        mediaQueryList.removeListener(listener);\n      }\n    };\n  }, [query, matchMedia]);\n\n  return matches;\n}","import { useState, useEffect } from 'react';\n\nimport type { IUseWindowSizeOptions } from '../types';\n\ninterface IWindowSize {\n  width: number;\n  height: number;\n}\n\n/**\n * Custom hook that tracks window size\n * \n * @param options - Configuration options\n * @returns Object with current window width and height\n */\nexport function useWindowSize(options: IUseWindowSizeOptions = {}): IWindowSize {\n  const {\n    initialWidth = typeof window !== 'undefined' ? window.innerWidth : 1200,\n    initialHeight = typeof window !== 'undefined' ? window.innerHeight : 800,\n  } = options;\n\n  const [windowSize, setWindowSize] = useState<IWindowSize>({\n    width: initialWidth,\n    height: initialHeight,\n  });\n\n  useEffect(() => {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    // Set initial size\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return windowSize;\n}","import { useEffect, useLayoutEffect } from 'react';\n\n/**\n * Custom hook that uses useLayoutEffect on the client and useEffect on the server\n * This prevents hydration mismatches in SSR applications\n */\nexport const useIsomorphicLayoutEffect = \n  typeof window !== 'undefined' ? useLayoutEffect : useEffect;","import { useCallback, useEffect, useRef } from 'react';\n\n/**\n * Custom hook that returns a function to check if component is still mounted\n * Useful for preventing state updates after component unmounts\n * \n * @returns Function that returns true if component is mounted\n */\nexport function useMountedState(): () => boolean {\n  const mountedRef = useRef(false);\n  const isMounted = useCallback(() => mountedRef.current, []);\n\n  useEffect(() => {\n    mountedRef.current = true;\n    \n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n\n  return isMounted;\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Custom hook that runs an effect only on updates, not on initial mount\n * \n * @param effect - The effect function to run\n * @param deps - The dependency array\n */\nexport function useUpdateEffect(\n  effect: React.EffectCallback,\n  deps?: React.DependencyList\n): void {\n  const isFirstMount = useRef(true);\n\n  useEffect(() => {\n    if (isFirstMount.current) {\n      isFirstMount.current = false;\n      return;\n    }\n    \n    return effect();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}"],"mappings":"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","names":["import_react","import_react","import_react","import_react","import_react","import_react","import_react","import_react","import_react","import_react","import_react","import_react","import_react","import_react"]}